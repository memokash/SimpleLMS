// lib/stripe.ts
import { loadStripe, Stripe } from '@stripe/stripe-js';

// Stripe types for product plans
export type PlanType = 'FREE' | 'PRO' | 'PREMIUM';

interface Plan {
  name: string;
  price: number;
  features: string[];
  stripePriceId: string | null;
}

// Load Stripe on frontend
export const stripePromise: Promise<Stripe | null> = loadStripe(
  process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY as string
);

// Subscription Plans
export const PLANS: Record<PlanType, Plan> = {
  FREE: {
    name: 'Free',
    price: 0,
    features: [
      '5 quiz attempts per day',
      'Basic progress tracking',
      'Limited topics',
    ],
    stripePriceId: null, // No Stripe product for free plan
  },
  PRO: {
    name: 'Pro',
    price: 99,
    features: [
      'Unlimited quiz attempts',
      'All 15,000+ questions',
      'Advanced analytics',
      'All specialties',
    ],
    stripePriceId: 'price_1RsTPUISGmrVXRzqWizONXS7', // ✅ This must be a real price ID
  },
  PREMIUM: {
    name: 'Premium',
    price: 199,
    features: [
      'Everything in Pro',
      'Access to community question bank',
      'Custom smart personal study notes and quizzes generated by highly trained model',
    ],
    stripePriceId: 'price_1Rt0XYZabc1234567890abcD', // ✅ Replace with real price ID from Stripe
  },
};

// Checkout session helper
export async function createCheckoutSession(
  priceId: string,
  userId: string
): Promise<{ sessionId?: string; error?: string }> {
  try {
    const res = await fetch('/api/create-checkout-session', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ priceId, userId }),
    });

    if (!res.ok) {
      const error = await res.text();
      throw new Error(`Stripe checkout failed: ${error}`);
    }

    const data = await res.json();
    return { sessionId: data.id };
  } catch (err) {
    console.error('Error creating Stripe Checkout session:', err);
    return { error: (err as Error).message };
  }
}
